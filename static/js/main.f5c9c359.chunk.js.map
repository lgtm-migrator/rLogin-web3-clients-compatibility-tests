{"version":3,"sources":["rLogin.ts","constants.ts","rif.ts","lib.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["rpcUrls","30","31","rLogin","RLogin","providerOptions","ledgerProviderOptions","options","debug","dcentProviderOptions","trezorProviderOptions","manifestEmail","manifestAppUrl","walletconnect","package","WalletConnectProvider","bridge","rpc","supportedChains","Object","keys","map","Number","to","value","gasPrice","gasLimit","abi","address","doAndLog","promise","a","result","console","log","initialState","chainId","provider","disconnect","TransactionsComponent","transactions","onClick","sendTransaction","sendTransactionWithGasPrice","sendTransactionWithGasLimit","sendTransactionWithNoValue","sendRIF","sendRIFWithGasPrice","sendRIFWithGasLimit","App","useState","state","setState","connect","Promise","all","request","method","accounts","ethersTransactions","signer","providers","Web3Provider","getSigner","rifToken","Contract","transfer","EthersTransactions","web3Transactions","_from","web3","Web3","eth","from","toLowerCase","gas","methods","send","Web3Transactions","providerTransactions","requestSendTransaction","txPayload","params","data","utils","Interface","encodeFunctionData","DirectlyProvider","className","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5c9c359.chunk.js","sourcesContent":["import RLogin from '@rsksmart/rlogin'\nimport WalletConnectProvider from '@walletconnect/web3-provider'\nimport { ledgerProviderOptions } from '@rsksmart/rlogin-ledger-provider'\nimport { dcentProviderOptions } from '@rsksmart/rlogin-dcent-provider'\nimport { trezorProviderOptions } from '@rsksmart/rlogin-trezor-provider'\n\nconst rpcUrls = {\n  30: 'https://public-node.rsk.co',\n  31: 'https://public-node.testnet.rsk.co'\n}\n\nexport const rLogin = new RLogin({\n  providerOptions: {\n    'custom-ledger': {\n      ...ledgerProviderOptions,\n      options: { debug: true }\n    },\n    'custom-dcent': {\n      ...dcentProviderOptions,\n      options: { debug: true }\n    },\n    'custom-trezor': {\n      ...trezorProviderOptions,\n      options: {\n        manifestEmail: 'info@iovlabs.org',\n        manifestAppUrl: 'https://rsksmart.github.io/rLogin-web3-clients-compatibility-tests/',\n        debug: true\n      }\n    },\n    walletconnect: {\n      package: WalletConnectProvider,\n      options: {\n        bridge: \"https://walletconnect-bridge.rifos.org/\",\n        rpc: rpcUrls\n      }\n    }\n  },\n  supportedChains: Object.keys(rpcUrls).map(Number),\n  rpcUrls\n})\n","export const to = '0xfae798f4097d2a475414603ff0b0c1dab20b1389'\nexport const value = '0x2710'\nexport const gasPrice = '0x42c1d80' // 70000000\nexport const gasLimit = '0x61a80' // 400000\n","export const abi = [\n  {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n          {\n              \"name\": \"\",\n              \"type\": \"string\"\n          }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n  },\n  {\n      \"constant\": false,\n      \"inputs\": [\n          {\n              \"name\": \"_spender\",\n              \"type\": \"address\"\n          },\n          {\n              \"name\": \"_value\",\n              \"type\": \"uint256\"\n          }\n      ],\n      \"name\": \"approve\",\n      \"outputs\": [\n          {\n              \"name\": \"\",\n              \"type\": \"bool\"\n          }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n  },\n  {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"totalSupply\",\n      \"outputs\": [\n          {\n              \"name\": \"\",\n              \"type\": \"uint256\"\n          }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n  },\n  {\n      \"constant\": false,\n      \"inputs\": [\n          {\n              \"name\": \"_from\",\n              \"type\": \"address\"\n          },\n          {\n              \"name\": \"_to\",\n              \"type\": \"address\"\n          },\n          {\n              \"name\": \"_value\",\n              \"type\": \"uint256\"\n          }\n      ],\n      \"name\": \"transferFrom\",\n      \"outputs\": [\n          {\n              \"name\": \"\",\n              \"type\": \"bool\"\n          }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n  },\n  {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"decimals\",\n      \"outputs\": [\n          {\n              \"name\": \"\",\n              \"type\": \"uint8\"\n          }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n  },\n  {\n      \"constant\": true,\n      \"inputs\": [\n          {\n              \"name\": \"_owner\",\n              \"type\": \"address\"\n          }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n          {\n              \"name\": \"balance\",\n              \"type\": \"uint256\"\n          }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n  },\n  {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n          {\n              \"name\": \"\",\n              \"type\": \"string\"\n          }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n  },\n  {\n      \"constant\": false,\n      \"inputs\": [\n          {\n              \"name\": \"_to\",\n              \"type\": \"address\"\n          },\n          {\n              \"name\": \"_value\",\n              \"type\": \"uint256\"\n          }\n      ],\n      \"name\": \"transfer\",\n      \"outputs\": [\n          {\n              \"name\": \"\",\n              \"type\": \"bool\"\n          }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n  },\n  {\n      \"constant\": true,\n      \"inputs\": [\n          {\n              \"name\": \"_owner\",\n              \"type\": \"address\"\n          },\n          {\n              \"name\": \"_spender\",\n              \"type\": \"address\"\n          }\n      ],\n      \"name\": \"allowance\",\n      \"outputs\": [\n          {\n              \"name\": \"\",\n              \"type\": \"uint256\"\n          }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n  },\n  {\n      \"payable\": true,\n      \"stateMutability\": \"payable\",\n      \"type\": \"fallback\"\n  },\n  {\n      \"anonymous\": false,\n      \"inputs\": [\n          {\n              \"indexed\": true,\n              \"name\": \"owner\",\n              \"type\": \"address\"\n          },\n          {\n              \"indexed\": true,\n              \"name\": \"spender\",\n              \"type\": \"address\"\n          },\n          {\n              \"indexed\": false,\n              \"name\": \"value\",\n              \"type\": \"uint256\"\n          }\n      ],\n      \"name\": \"Approval\",\n      \"type\": \"event\"\n  },\n  {\n      \"anonymous\": false,\n      \"inputs\": [\n          {\n              \"indexed\": true,\n              \"name\": \"from\",\n              \"type\": \"address\"\n          },\n          {\n              \"indexed\": true,\n              \"name\": \"to\",\n              \"type\": \"address\"\n          },\n          {\n              \"indexed\": false,\n              \"name\": \"value\",\n              \"type\": \"uint256\"\n          }\n      ],\n      \"name\": \"Transfer\",\n      \"type\": \"event\"\n  }\n]\n\nexport const address = '0x19f64674d8a5b4e652319f5e239efd3bc969a1fe'\n","import { providers, Contract, utils } from 'ethers'\nimport Web3 from 'web3'\nimport { to, value, gasPrice, gasLimit } from './constants'\nimport { abi, address } from './rif'\n\nasync function doAndLog(promise: Promise<any>) {\n  const result = await promise\n  console.log(result)\n  return promise\n}\n\nexport interface Transactions {\n  sendTransaction(): Promise<any>\n  sendTransactionWithGasLimit(): Promise<any>\n  sendTransactionWithGasPrice(): Promise<any>\n  sendTransactionWithNoValue(): Promise<any>\n  sendRIF(): Promise<any>\n  sendRIFWithGasLimit(): Promise<any>\n  sendRIFWithGasPrice(): Promise<any>\n}\n\nexport function EthersTransactions(provider: any): Transactions {\n  const signer = new providers.Web3Provider(provider).getSigner()\n  const rifToken = new Contract(address, abi).connect(signer)\n\n  function sendTransaction() {\n    return doAndLog(signer.sendTransaction({\n      to, value\n    }))\n  }\n\n  function sendTransactionWithGasPrice() {\n    return doAndLog(signer.sendTransaction({\n      to, value, gasPrice\n    }))\n  }\n\n  function sendTransactionWithGasLimit() {\n    return doAndLog(signer.sendTransaction({\n      to, value, gasLimit\n    }))\n  }\n\n  function sendTransactionWithNoValue() {\n    return doAndLog(signer.sendTransaction({ to }))\n  }\n\n  function sendRIF() {\n    return doAndLog(rifToken.transfer(to, value))\n  }\n\n  function sendRIFWithGasPrice() {\n    return doAndLog(rifToken.transfer(to, value, { gasPrice }))\n  }\n\n  function sendRIFWithGasLimit() {\n    return doAndLog(rifToken.transfer(to, value, { gasLimit }))\n  }\n\n  return {\n    sendTransaction,\n    sendTransactionWithGasLimit,\n    sendTransactionWithGasPrice,\n    sendTransactionWithNoValue,\n    sendRIF,\n    sendRIFWithGasLimit,\n    sendRIFWithGasPrice\n  }\n}\n\nexport function Web3Transactions(provider: any, _from: string): Transactions {\n  const web3 = new Web3(provider)\n  const rifToken = new web3.eth.Contract(abi as any, address)\n  const from = _from.toLowerCase()\n\n  function sendTransaction() {\n    return doAndLog(web3.eth.sendTransaction({\n      from, to, value\n    }))\n  }\n\n  function sendTransactionWithGasPrice() {\n    return doAndLog(web3.eth.sendTransaction({\n      from, to, value, gasPrice\n    }))\n  }\n\n  function sendTransactionWithGasLimit() {\n    return doAndLog(web3.eth.sendTransaction({\n      from, to, value, gas: gasLimit\n    }))\n  }\n\n  function sendTransactionWithNoValue() {\n    return doAndLog(web3.eth.sendTransaction({\n      from, to\n    }))\n  }\n\n  function sendRIF() {\n    return doAndLog(rifToken.methods.transfer(to, value).send({ from }))\n  }\n\n  function sendRIFWithGasPrice() {\n    return doAndLog(rifToken.methods.transfer(to, value).send({ from, gasPrice }))\n  }\n\n  function sendRIFWithGasLimit() {\n    return doAndLog(rifToken.methods.transfer(to, value).send({ from, gas: gasLimit }))\n  }\n\n  return {\n    sendTransaction,\n    sendTransactionWithGasLimit,\n    sendTransactionWithGasPrice,\n    sendTransactionWithNoValue,\n    sendRIF,\n    sendRIFWithGasLimit,\n    sendRIFWithGasPrice\n  }\n}\n\nexport function DirectlyProvider(provider: any, from: string): Transactions {\n  const requestSendTransaction = (txPayload: any) => provider.request({\n    method: 'eth_sendTransaction',\n    params: [txPayload]\n  })\n\n  function sendTransaction() {\n    return doAndLog(requestSendTransaction({ from, to, value }))\n  }\n\n  function sendTransactionWithGasPrice() {\n    return doAndLog(requestSendTransaction({\n      from, to, value, gasPrice\n    }))\n  }\n\n  function sendTransactionWithGasLimit() {\n    return doAndLog(requestSendTransaction({\n      from, to, value, gas: gasLimit\n    }))\n  }\n\n  function sendTransactionWithNoValue() {\n    return doAndLog(requestSendTransaction({ from, to }))\n  }\n\n  const rifInterface = new utils.Interface(abi)\n\n  const data = rifInterface.encodeFunctionData('transfer', [to, value])\n\n  function sendRIF() {\n    return doAndLog(requestSendTransaction({ from, to: address, data }))\n  }\n\n  function sendRIFWithGasPrice() {\n    return doAndLog(requestSendTransaction({ from, to: address, data, gasPrice }))\n  }\n\n  function sendRIFWithGasLimit() {\n    return doAndLog(requestSendTransaction({ from, to: address, data, gas: gasLimit }))\n  }\n\n  return {\n    sendTransaction,\n    sendTransactionWithGasLimit,\n    sendTransactionWithGasPrice,\n    sendTransactionWithNoValue,\n    sendRIF,\n    sendRIFWithGasLimit,\n    sendRIFWithGasPrice\n  }\n}\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { rLogin } from './rLogin'\nimport { Transactions, EthersTransactions, Web3Transactions, DirectlyProvider } from './lib'\nimport { to, value, gasPrice, gasLimit } from './constants'\n\nconst initialState = {\n  address: '',\n  chainId: '',\n  provider: null,\n  disconnect: () => {}\n}\n\nconst TransactionsComponent: React.FC<{ transactions: Transactions }> = ({ transactions }) => <>\n  <h3>RBTC transactions</h3>\n  <p><button onClick={transactions.sendTransaction}>send RBTC</button></p>\n  <p><button onClick={transactions.sendTransactionWithGasPrice}>Send RBTC with custom gas price</button></p>\n  <p><button onClick={transactions.sendTransactionWithGasLimit}>Send RBTC with custom gas limit</button></p>\n  <p><button onClick={transactions.sendTransactionWithNoValue}>Send no RBTC</button></p>\n  <h3>RIF transactions</h3>\n  <p><button onClick={transactions.sendRIF}>send RIF</button></p>\n  <p><button onClick={transactions.sendRIFWithGasPrice}>Send RIF with custom gas price</button></p>\n  <p><button onClick={transactions.sendRIFWithGasLimit}>Send RIF with custom gas limit</button></p>\n</>\n\nfunction App() {\n  const [state, setState] = useState<{\n    address: string\n    chainId: string\n    provider: any\n    disconnect: () => void\n  }>(initialState)\n\n  const connect = async () => {\n    const { provider, disconnect } = await rLogin.connect()\n\n    const [accounts, chainId] = await Promise.all([\n      provider.request({ method: 'eth_accounts' }),\n      provider.request({ method: 'eth_chainId' })\n    ])\n\n    setState({ address: accounts[0], chainId, provider, disconnect })\n  }\n\n  const disconnect = () => {\n    state.disconnect()\n\n    setState(initialState)\n  }\n\n  const ethersTransactions = state.provider ? EthersTransactions(state.provider) : null\n  const web3Transactions = state.provider ? Web3Transactions(state.provider, state.address) : null\n  const providerTransactions = state.provider ? DirectlyProvider(state.provider, state.address) : null\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome to rLogin</h1>\n      <p>This app serves for testing different payloads with rLogin compatible wallets. Currently, our suit includes sending RBTC and ERC20 using different gas options</p>\n      <button onClick={connect} disabled={!!state.address}>connect</button>\n      <button onClick={disconnect} disabled={!state.address}>disconnect</button>\n        <p>Address: {state.address}</p>\n        <p>Chain id: {state.chainId}</p>\n        <p>Transaction payload:</p>\n        <table>\n          <thead>\n            <tr>\n              <th>Field</th>\n              <th>Value</th>\n              <th>Notes</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>To</td>\n              <td>{to}</td>\n              <td></td>\n            </tr>\n            <tr>\n              <td>Value</td>\n              <td>{value} wei</td>\n              <td>(either sending RBTC or RIF)</td>\n            </tr>\n            <tr>\n              <td>Gas price</td>\n              <td>{gasPrice}</td>\n              <td>(used when clicking on \"with custom gas price\")</td>\n            </tr>\n            <tr>\n              <td>Gas limit</td>\n              <td>{gasLimit}</td>\n              <td>(used when clicking on \"with custom gas limit\")</td>\n            </tr>\n          </tbody>\n        </table>\n        <hr />\n        <h2>Using <code>ethers</code></h2>\n        {ethersTransactions && <TransactionsComponent transactions={ethersTransactions} />}\n        <hr />\n        <h2>Using <code>web3.js</code></h2>\n        {web3Transactions && <TransactionsComponent transactions={web3Transactions} />}\n        <hr />\n        <h2>Using directly the <code>provider</code></h2>\n        {providerTransactions && <TransactionsComponent transactions={providerTransactions} />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}